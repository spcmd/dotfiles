#                               _
#  ___ _ __   ___ _ __ ___   __| |
# / __| '_ \ / __| '_ ` _ \ / _` |
# \__ | |_) | (__| | | | | | (_| |
# |___| .__/ \___|_| |_| |_|\__,_|
#     |_|
# Created by: spcmd
# http://spcmd.github.io
# https://github.com/spcmd

# Currency converter (Google)
cconv() {
  wget -qO- "http://www.google.com/finance/converter?a=$1&from=$2&to=$3" |  sed '/res/!d;s/<[^>]*>//g';
}

# Pastebin services
sprunge() {
    # http://sprunge.us/
    syntax=$1
    paste=$(curl --silent -F 'sprunge=<-' http://sprunge.us)
    [[ $syntax ]] && echo "- SYNTAX HIGHLIGHTED:  $paste?$syntax"
    echo "- RAW:  $paste"
}

clbin() {
    # https://clbin.com/
    paste=$(curl --silent -F 'clbin=<-' https://clbin.com)
    echo "- SYNTAX HIGHLIGHTED:  $paste?hl"
    echo "- RAW:  $paste"
}

lspastebin() { which sprunge clbin;}

# bbradio checker
bbradio() {
    # yesterday
    date=$(date +"%y%m%d" -d "-1 days")
    wget -P ~/Downloads http://video.builder.hu/bunny/bb.radio_$date.mp3

    # today and the next few days
    start_date=$(date)
    num_days=5
    for i in $(seq 0 $num_days)
    do
        date=$(date +"%y%m%d" -d "${start_date}+${i} days")
        wget -P ~/Downloads http://video.builder.hu/bunny/bb.radio_$date.mp3
    done
}

bbtv() {
    case $1 in
        -w) [[ ! -z $2 ]] && mpv http://www.bbtv.hu/bbtv-$2 || echo "Error: no episode number given." ;;
        -h) echo "Usage: $0 [option]"
            echo "  Options:"
            echo "           -w <number>    Watch/Stream episode."
            echo "           -h             This help."
            echo "Without an option it will download the episode."
            ;;
        *) [[ ! -z $1 ]] && youtube-dl -o "~/Downloads/%(title)s.%(ext)s" http://www.bbtv.hu/bbtv-$1 || echo "Error: no episode number given." ;;
    esac
}

# ping
alias pingg='ping google.com'

# is this site down?
isdown() { curl -s "http://www.downforeveryoneorjustme.com/$1" | sed '/just you/!d;s/<[^>]*>//g;s/&#x2F;/\//g' }

# what is my ip?
myip()  { wget http://ipinfo.io/ip -qO - }

# url shortener
urlshort() { wget -qO - "http://is.gd/create.php?format=simple&url=$1" }

# translate shell (google translate) (https://github.com/soimort/translate-shell)
gthu() {
    # save translated words to this file (dictionary)
    file_wordlist="$HOME/Documents/kiszotarazott.txt"
    # separate the original word from the translations with this
    separator=" : "
    # loop is required for multiple arguments to work properly
    for word in "$@"; do
        # grep the word from the file (check whether it's already added), if it's not, translate and add/append it to the file
        grep --color=never "^${word}${separator}" "$file_wordlist" || (translation="$(trans -no-ansi -show-translation-phonetics n  -show-translation-phonetics n -show-languages n --show-original n -show-prompt-message n -show-alternatives n en:hu "$word" | sed 's/adjective//;s/noun//;s/verb//;/^$/d;3~2d;s/^[ \t]*//' | uniq | paste -sd ',' | sed 's/,/, /g')"; echo "${word}${separator}${translation}" | tee --append "$file_wordlist")
    done
}
gten() {
    # save translated words to this file (dictionary)
    file_wordlist="$HOME/Documents/kiszotarazott.txt"
    # separate the original word from the translations with this
    separator=" : "
    # loop is required for multiple arguments to work properly
    for word in "$@"; do
        # grep the word from the file (check whether it's already added), if it's not, translate and add/append it to the file
        grep --color=never "^${word}${separator}" "$file_wordlist" || (translation="$(trans -no-ansi -show-translation-phonetics n  -show-translation-phonetics n -show-languages n --show-original n -show-prompt-message n -show-alternatives n hu:en "$word" | sed 's/adjective//;s/noun//;s/verb//;/^$/d;3~2d;s/^[ \t]*//' | uniq | paste -sd ',' | sed 's/,/, /g')"; echo "${word}${separator}${translation}" | tee --append "$file_wordlist")
    done
}
gteo() {
    # separate the original word from the translations with this
    separator=" : "
    # loop is required for multiple arguments to work properly
    for word in "$@"; do
        translation="$(trans -no-ansi -show-translation-phonetics n  -show-translation-phonetics n -show-languages n --show-original n -show-prompt-message n -show-alternatives n eo:en "$word" | sed 's/adjective//;s/noun//;s/verb//;/^$/d;3~2d;s/^[ \t]*//' | uniq | paste -sd ',' | sed 's/,/, /g')"
        echo "${word}${separator}${translation}"
    done
}
alias update-translate-shell="wget -N -P ~/bin https://raw.githubusercontent.com/soimort/translate-shell/gh-pages/trans"

# wttr (weather, a Web frontend for wego: https://github.com/chubin/wttr.in)
wttr() { curl wttr.in/$1 }

# vim: set syntax=sh filetype=sh :
