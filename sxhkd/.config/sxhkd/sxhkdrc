# -----------------------
# Programs and Scripts
# -----------------------

# terminal emulator
super + Return
	urxvtc

# browser
super + alt + f
    ~/bin/chromium-privoxy.sh

# dmenu
super + a
    $DIR_SCRIPTS/dmenu_run -i -p '>' -fn 'terminus' -sb '#285577' -nb '#121212'
    #$DIR_SCRIPTS/dmenu_run -i -p '>' -fn 'terminus' -sb '#0D497B' -nb '#121212'
    #$DIR_SCRIPTS/dmenu_run -i -p '>' -fn 'terminus' -sb '#4D4270' -nb '#121212'

# Gcolor2
super + alt + c
    gcolor2

# mutt
super + alt + m
    urxvtc -name neomutt -e neomutt -F ~/.mutt/account.1.muttrc; bspc desktop -f ^4

# geary
super + alt + g
    bspc desktop -f ^4; geary-light-theme.sh

# newsbeuter
super + alt + n
    urxvtc -name newsbeuter -e newsbeuter

# ranger
super + alt + r
    urxvtc -name ranger -e ranger

# rtorrent
super + alt + t
    urxvtc -name rtorrent -e rtorrent

# spotify
super + alt + s
    bspc desktop -f ^4; spotify
super + s
    dbus-send --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
super + Left
    dbus-send --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
super + Right
    dbus-send --type=method_call --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

# spotymenu
super + b
    $DIR_SCRIPTS/spotymenu

# calibre
super + c
    $DIR_SCRIPTS/dcalibre

# comics
super + shift + c
    $DIR_SCRIPTS/dcomics

# mps-youtube
super + y
    $DIR_SCRIPTS/mpsyt-control play-pause
super + alt + Left
    $DIR_SCRIPTS/mpsyt-control previous
super + alt + Right
    $DIR_SCRIPTS/mpsyt-control next

# scrot
Print
    scrot ~/Pictures/scrot_%Y-%m-%d_%T.png ; notify-send "Screenshot taken"
super + Print
    sleep 1s && scrot -s ~/Pictures/scrot_%Y-%m-%d_%T.png ; notify-send "Screenshot taken"

# gmailcheck
super + ctrl + m
   notify-send 'gmailcheck' 'Checking mail...'; $DIR_SCRIPTS/gmailcheck.sh; notify-send 'gmailcheck' 'Check done.'

# newmail_list
super + shift + m
    notify-send "$(cat ~/.mutt/newmail_list)"

# backlight
super + ctrl + Left
    light -U 2
super + ctrl + Right
    light -A 2

# volume
super + Up
    ~/.config/bspwm/volume.sh up
super + Down
    ~/.config/bspwm/volume.sh down

# suspend
super + ctrl + z
    systemctl suspend

# dpass
super + p
    $DIR_SCRIPTS/dpass

# wifi switch
super + F3
    $DIR_SCRIPTS/wifi-switch.sh

# special characters
control + mod5 + c
    $DIR_SCRIPTS/eo_chars.sh c
control + mod5 + g
    $DIR_SCRIPTS/eo_chars.sh g
control + mod5 + h
    $DIR_SCRIPTS/eo_chars.sh h
control + mod5 + j
    $DIR_SCRIPTS/eo_chars.sh j
control + mod5 + s
    $DIR_SCRIPTS/eo_chars.sh s
control + mod5 + u
    $DIR_SCRIPTS/eo_chars.sh u


# -----------------------
# bspwm hotkeys
# -----------------------

# reload config files
super + shift + r
	pkill -USR1 -x sxhkd; pkill panel; pkill lemonbar; pkill dash; ~/.config/bspwm/bspwmrc

# quit bspwm normally
super + shift + q
    pkill panel; pkill lemonbar; pkill dash; bspc quit

# close window
super + q
    bspc node -c

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# rotate
super + ctrl + space
    bspc node @focused:/ --rotate 90

# resize: expand the tiled space in the given direction
super + alt + h
    bspc node @east -r -25 || bspc node @west -r -25
super + alt + j
    bspc node @south -r +25 || bspc node @north -r +25
super + alt + k
    bspc node @north -r -25 || bspc node @south -r -25
super + alt + l
    bspc node @west -r +25 || bspc node @east -r +25

# move a floating window
super + alt + {Left,Down,Up,Right}
	xdo move {-x -20,-y +20,-y -20,-x +20}

# toggle the window state
super + ctrl + f
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi

super + ctrl + c
    if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
        bspc node focused -t fullscreen; \
    else \
        bspc node focused -t tiled; \
    fi

super + ctrl + t
    if [ -z "$(bspc query -N -n focused.pseudo_tiled)" ]; then \
        bspc node focused -t pseudo_tiled; \
    else \
        bspc node focused -t tiled; \
    fi

# set the node flags
super + ctrl + {x,s,p}
    bspc node -g {locked,sticky,private}

# (un)minimize / (un)hide
super + ctrl + n
    ~/.config/bspwm/hide.sh hide

super + shift + ctrl + n
   ~/.config/bspwm/hide.sh unhide

# --- focus/swap/switch ---

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node (cycle) in the current desktop
super + {_,shift+}space
	bspc node -f {next,prev}.local

# swap the current node and the biggest node in the current desktop
super + g
	bspc node -s biggest.local

# switch desktop
super + {odoubleacute,uacute}
	bspc desktop -f {prev,next}

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# jump to urgent desktop
super + u
    bspc desktop -f last.urgent || bspc desktop -f last

# jump back and forth between the previous/last dekstop and the current
super + Escape
    bspc desktop -f last

# switch monitor
super + {udiaeresis,oacute}
	bspc monitor -f {prev,next}

# --- preselect ---

# preselect the direction (toggle)
super + ctrl + {h,j,k,l}
	bspc node -p '~{west,south,north,east}'

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused desktop
#super + ctrl + shift + space
	#bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# create a grid layout
super + ctrl + g
    urxvtc ; \
    urxvtc ; \
    bspc node -p south ; \
    urxvtc ; \
    sleep 0.2 ; \
    bspc node -f east ; \
    bspc node -p east ; \
    urxvtc
